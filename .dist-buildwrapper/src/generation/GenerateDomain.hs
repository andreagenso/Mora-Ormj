-- do not edit; automatically generated by UU.AG
module GenerateDomain where

import System.Directory
 -- Definicion de la estructura de datos 
-- Domain ------------------------------------------------------
type Domain = [(String)]
-- semantic domain
type T_Domain = (String) ->
                ( (IO()),(String))
-- cata
sem_Domain :: (Domain) ->
              (T_Domain)
sem_Domain (list) =
    (Prelude.foldr (sem_Domain_Cons) (sem_Domain_Nil) (list))
sem_Domain_Cons :: (String) ->
                   (T_Domain) ->
                   (T_Domain)
sem_Domain_Cons (hd_) (tl_) =
    \ _lhsIdom ->
        let _lhsOdirCreados :: (IO())
            _lhsOdom :: (String)
            _tlIdirCreados :: (IO())
            _tlIdom :: (String)
            _tlOdom :: (String)
            ( _tlIdirCreados,_tlIdom) =
                (tl_ (_tlOdom))
            (_lhsOdom@_) =
                _tlIdom
            (_tlOdom@_) =
                _dom
            (_dom@_) =
                _lhsIdom ++ hd_ ++ "/"
            (_lhsOdirCreados@_) =
                createDirectory _dom >> _tlIdirCreados
        in  ( _lhsOdirCreados,_lhsOdom)
sem_Domain_Nil :: (T_Domain)
sem_Domain_Nil  =
    \ _lhsIdom ->
        let _lhsOdirCreados :: (IO())
            _lhsOdom :: (String)
            (_lhsOdom@_) =
                _lhsIdom
            (_lhsOdirCreados@_) =
                return()
        in  ( _lhsOdirCreados,_lhsOdom)
-- Root --------------------------------------------------------
data Root = Root (String) (Domain)
          deriving ( Show)
-- semantic domain
type T_Root = ( ( IO() ),(String))
-- cata
sem_Root :: (Root) ->
            (T_Root)
sem_Root ((Root (_src) (_domain))) =
    (sem_Root_Root (_src) ((sem_Domain (_domain))))
sem_Root_Root :: (String) ->
                 (T_Domain) ->
                 (T_Root)
sem_Root_Root (src_) (domain_) =
    let _lhsOout :: ( IO() )
        _lhsOruta :: (String)
        _domainIdirCreados :: (IO())
        _domainIdom :: (String)
        _domainOdom :: (String)
        ( _domainIdirCreados,_domainIdom) =
            (domain_ (_domainOdom))
        (_domainOdom@_) =
            src_ ++ "/"
        (_lhsOout@_) =
            do putStrLn ("Creando dominio del proyecto....")
               _domainIdirCreados
               putStrLn (" Domino creado ...")
        (_lhsOruta@_) =
            if ((last _domainIdom) == '/')then (init _domainIdom) else _domainIdom
    in  ( _lhsOout,_lhsOruta)


