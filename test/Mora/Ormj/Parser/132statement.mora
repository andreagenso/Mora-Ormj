/* PRUEBAS DE STATEMENT */

// ENTRANDO POR METHODDECLARATION

// StatementWithoutTrailingSubstatement
/* 
class ReprChange implements AAA,adadad,asdad {	
	// methodDeclaration -> methodModifiers TypeParameters opt
	public <AAA,BBB> void  Metodo(){
		{}
		34;
		return a;
	}
}

// LabeledStatement
 
class ReprChange implements AAA,adadad,asdad {	
	// methodDeclaration -> methodModifiers TypeParameters opt
	public <AAA,BBB> void  Metodo(){
		etiquetaotra : {}
		etiqueta : 34;
		etiquetareturn : return a;
	}
}


// IfThenStatement
class ReprChange implements AAA,adadad,asdad {	
	// methodDeclaration -> methodModifiers TypeParameters opt
	public <AAA,BBB> void  Metodo(){
		etiquetaotra : {}
		etiqueta : 34;
		etiquetareturn : return a;
		
		if (true) { a = 8; }
		if (2 > 4) true;
		if (true && false) false;
		
	}
}
*/
// IfThenElseStatement
class ReprChange implements AAA,adadad,asdad {	
	// methodDeclaration -> methodModifiers TypeParameters opt
	public <AAA,BBB> void  Metodo(){
		etiquetaotra : {}
		etiqueta : 34;
		etiquetareturn : return a;
		
		if (true) { a = 8; } else { a = 6;}
		if (2 > 4) true; else false;
		if (true && false) false; else true;
		
	}
}

// WhileStatement
class ReprChange implements AAA,adadad,asdad {	
	// methodDeclaration -> methodModifiers TypeParameters opt
	public <AAA,BBB> void  Metodo(){
		etiquetaotra : {}
		etiqueta : 34;
		etiquetareturn : return a;
		
		if (true) { a = 8; } else { a = 6;}
		if (2 > 4) true; else false;
		
		 while (a > 100) {
		 	m = m =1;
		 }
		 
		 while (true) { System.out.println ("a"); } 
 		 while (true) "a";
 		 while (true) System.out.println ("a"); 
	}
}



// ForStatement
class ReprChange implements AAA,adadad,asdad {	
	// methodDeclaration -> methodModifiers TypeParameters opt
	
	
	public <AAA,BBB> void  Metodo(){
		
		Vector<String> v = new Vector<String>();
		for(String cadena: v)
		System.out.println (cadena);
		
		
		for(int i=0;100;i++){
			System.out.println(i);
		}
		
		int[] arrayInt = {1, 20, 30, 2, 3, 5};
		for(int elemento: arrayInt)
		System.out.println (elemento);	 
		
	}
}